ls
source('~/.active-rstudio-document', echo=TRUE)
library(devtools)
library(roxygen2)
library(coda)
library(matrixcalc)
library(R2admb)
install.packages(R2admb)
install.packages('R2admb')
library(R2admb)
load_all("admbtools")
dev_help("pairs_admb")                  # how to see doc
load_all("admbtools")
setwd('/Users/peterkuriyama/School/Research/admb_guide/admbtools')
load_all("admbtools")
setwd('/Users/peterkuriyama/School/Research/admb_guide')
load_all("admbtools")
dev_help("pairs_admb")                  # how to see doc
dev_help("pairs_admb")                  # how to see doc
run_admb_mcmc
library(R2admb)
## document("admbtools")
load_all("admbtools")
dev_help("pairs_admb")                  # how to see doc
## global plotting settings
width <- 7; height <- 5
simple1 <- run_admb_mcmc("examples/simple", "simple", Nout=1000, mcsave=1,
burn.in=1, verbose=TRUE)
load_all("admbtools")
dev_help("pairs_admb")                  # how to see doc
simple1 <- run_admb_mcmc("examples/simple", "simple", Nout=1000, mcsave=1,
burn.in=1, verbose=TRUE)
getwd()
getwd()
simple1 <- run_admb_mcmc("examples/simple", "simple", Nout=1000, mcsave=1,
burn.in=1, verbose=TRUE)
simple1 <- run_admb_mcmc("examples/simple", "./simple", Nout=1000, mcsave=1,
burn.in=1, verbose=TRUE)
pairs_admb(admb_mcmc=simple1)
?ellipse
dev.copy2pdf(width=width, height=height,file="Plots/simple1.pdf")
pairs_admb(admb_mcmc=simple1,  diag="trace")
dev.copy2pdf(width=width, height=height,file="Plots/simple1_trace.pdf")
simple2 <- run_admb_mcmc("examples/simple", "simple", Nout=1000, mcsave=100,
burn.in=1, verbose=TRUE)
simple2 <- run_admb_mcmc("examples/simple", "./simple", Nout=1000, mcsave=100,
burn.in=1, verbose=TRUE)
pairs_admb(admb_mcmc=simple2)
simple1 <- run_admb_mcmc("examples/simple", "./simple", Nout=1000, mcsave=1,
burn.in=1, verbose=TRUE)
pairs_admb(admb_mcmc=simple1)
dev.copy2pdf(width=width, height=height,file="Plots/simple1.pdf")
pairs_admb(admb_mcmc=simple1,  diag="trace")
dev.copy2pdf(width=width, height=height,file="Plots/simple1_trace.pdf")
simple2 <- run_admb_mcmc("examples/simple", "./simple", Nout=1000, mcsave=100,
burn.in=1, verbose=TRUE)
pairs_admb(admb_mcmc=simple2)
dev.copy2pdf(width=width, height=height,file="Plots/simple2.pdf")
pairs_admb(admb_mcmc=simple2,  diag="trace")
dev.copy2pdf(width=width, height=height,file="Plots/simple2_trace.pdf")
simple.hy1 <-
run_admb_mcmc("examples/simple", "./simple", Nout=1000, mcsave=1,
burn.in=1, hybrid=TRUE, verb=FALSE,
hynstep=20, hyeps=.1)
pairs_admb(simple.hy1)
dev.copy2pdf(width=width, height=height,file="Plots/simple_hy1.pdf")
paris_admb
pairs_admb
library('ellipse')
install.packages('ellipse')
library('ellipse')
install.packages('R2admb')
pairs_admb(admb_mcmc=simple2)
dev.copy2pdf(width=width, height=height,file="Plots/simple2.pdf")
pairs_admb(admb_mcmc=simple2,  diag="trace")
dev.copy2pdf(width=width, height=height,file="Plots/simple2_trace.pdf")
simple.hy1 <-
run_admb_mcmc("examples/simple", "./simple", Nout=1000, mcsave=1,
burn.in=1, hybrid=TRUE, verb=FALSE,
hynstep=20, hyeps=.1)
pairs_admb(simple.hy1)
dev.copy2pdf(width=width, height=height,file="Plots/simple_hy1.pdf")
hynstep.seq <- c(10, 100)
hyeps.seq <- c(.05, .5)
hy.grid <- expand.grid(hynstep.seq, hyeps.seq)
labs <- paste0("hyeps=", hy.grid[,2], "; hynstep=", hy.grid[,1])
simple.hy <- simple.hy2 <- list()
a.seq <- seq(1.5,2.5, len=50)
b.seq <- seq(2,6, len=50)
param.grid <- expand.grid(a=a.seq, b=b.seq)
a.mle <- 1.90909098475
b.mle <- 4.07817738582
yobs <- c(1.4, 4.7, 5.1, 8.3, 9.0, 14.5, 14.0, 13.4, 19.2, 18)
xobs <- c(-1, 0, 1, 2, 3, 4, 5, 6, 7, 8)
U <- function(q) log(sum((q[1]*xobs+q[2]-yobs)^2))*length(yobs)/2
NLL <- sapply(1:nrow(param.grid), function(x)
U(c(param.grid$a[x], param.grid$b[x])))
NLL <- matrix(NLL, nrow=50)
NLL
setwd("examples/simple")
getwed()
getwd()
leapfrog.list <- list()
write.table(x=c(2,3), file="init.pin", row.names=F, col.names=F)
for(k in 1:nrow(hy.grid)){
system(paste("simple -mcmc 1 -hybrid -noest -nohess -hyeps",
hy.grid[k,2], "-hynstep", hy.grid[k,1], "-ainp init.pin"))
leapfrog.list[[k]] <- read.table("leapfrog.csv", sep=",")
}
setwd("../..")
par(mfrow=c(2,2), mar= .5*c(1,1,4,1), oma=c(2.5,2.5,0,0), cex.axis=.8)
for(k in 1:4){
contour(a.seq, b.seq, NLL, axes=F, col=gray(.5))
write.table(x=c(2,3), file="init.pin", row.names=F, col.names=F)
for(k in 1:nrow(hy.grid)){
system(paste("./simple -mcmc 1 -hybrid -noest -nohess -hyeps",
hy.grid[k,2], "-hynstep", hy.grid[k,1], "-ainp init.pin"))
leapfrog.list[[k]] <- read.table("leapfrog.csv", sep=",")
}
setwd("../..")
par(mfrow=c(2,2), mar= .5*c(1,1,4,1), oma=c(2.5,2.5,0,0), cex.axis=.8)
for(k in 1:4){
contour(a.seq, b.seq, NLL, axes=F, col=gray(.5))
points(a.mle, b.mle, col='red', pch=16)
leapfrog <- leapfrog.list[[k]][-(1:2),1:2]
n <- nrow(leapfrog)
arrows(leapfrog[-n,1], leapfrog[-n,2], leapfrog[-1,1],
leapfrog[-1,2], length=.05)
points(leapfrog[c(1,n),], pch=c(16, 1), cex=1.5)
mtext(labs[k], line=.5)
if(k %in% c(1,3)) {axis(2, mgp=c(1,.5,0), tck=-.02)
mtext("a", side=2, line=1.5, cex=1.1)}
if(k %in% c(3,4)) {axis(1, mgp=c(1,.5,0), tck=-.02)
mtext("b", side=1, line=1.5, cex=1.1)}
box(col=gray(.5))
}
dev.copy2pdf(width=width, height=height,file="Plots/hybrid_grid_trace.pdf")
## Run some cases with same arguments, but different seeds to show the
## impact of momentum variables.
}
leapfrog.list <- list()
write.table(x=c(2,3), file="init.pin", row.names=F, col.names=F)
for(k in 1:nrow(hy.grid)){
system(paste("./simple -mcmc 1 -hybrid -noest -nohess -hyeps",
hy.grid[k,2], "-hynstep", hy.grid[k,1], "-ainp init.pin"))
leapfrog.list[[k]] <- read.table("leapfrog.csv", sep=",")
}
setwd("../..")
par(mfrow=c(2,2), mar= .5*c(1,1,4,1), oma=c(2.5,2.5,0,0), cex.axis=.8)
for(k in 1:4){
contour(a.seq, b.seq, NLL, axes=F, col=gray(.5))
points(a.mle, b.mle, col='red', pch=16)
leapfrog <- leapfrog.list[[k]][-(1:2),1:2]
n <- nrow(leapfrog)
arrows(leapfrog[-n,1], leapfrog[-n,2], leapfrog[-1,1],
leapfrog[-1,2], length=.05)
points(leapfrog[c(1,n),], pch=c(16, 1), cex=1.5)
mtext(labs[k], line=.5)
if(k %in% c(1,3)) {axis(2, mgp=c(1,.5,0), tck=-.02)
mtext("a", side=2, line=1.5, cex=1.1)}
if(k %in% c(3,4)) {axis(1, mgp=c(1,.5,0), tck=-.02)
mtext("b", side=1, line=1.5, cex=1.1)}
box(col=gray(.5))
}
setwd("examples/simple")
leapfrog.list <- list()
write.table(x=c(2,3), file="init.pin", row.names=F, col.names=F)
set.seed(3)
seeds <- sample(1:1000, 4)
for(k in 1:4){
system(paste("simple -mcmc 1 -hybrid -noest -nohess -hyeps",
.25, "-hynstep", 10, "-ainp init.pin -mcseed", seeds[k]))
leapfrog.list[[k]] <- read.table("leapfrog.csv", sep=",")
}
setwd("../..")
simple1 <- run_admb_mcmc("examples/simple", "./simple", Nout=1000, mcsave=1,
burn.in=1, verbose=TRUE)
pairs_admb(admb_mcmc=simple1)
simple1 <- run_admb_mcmc("examples/simple", "./simple", Nout=1000, mcsave=1,
burn.in=1, verbose=TRUE)
pairs_admb
admb_mcmc
admb_mcmc)
admb_mcmc
run_admb_mcmc
simple.hy1
getwd()
file
/Users/peterkuriyama/School/Research/admb_guide/examples/simple
getwd('/Users/peterkuriyama/School/Research/admb_guide/examples/simple')
setwd('/Users/peterkuriyama/School/Research/admb_guide/examples/simple')
getwd()
readBin
paste0(simple, '.psv')
paste0('simple', '.psv')
file('simple.psv', 'rb')
psv <- file('simple.psv', 'rb')
psv
readBin(psv, 'integer', n=1)
readBin(psv, 'numeric', n=2 * (1000 + 10000))
mcmc
psv
psv
mcmc
read_admb(simple)
read_admb('simple')
mcmc
nparams <- readBin(psv, "integer", n=1)
nparams
mcmc <- matrix(readBin(psv, "numeric", n=nparams*(Nout+burn.in)), ncol=nparams,
byrow=TRUE)
setwd('/Users/peterkuriyama/School/Research/admb_guide/examples/simple')
ls
getwd()
model.name <- './simple'
model.name
Nout <- 10000
1e6
